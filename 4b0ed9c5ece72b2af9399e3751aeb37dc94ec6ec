{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "adcceb00_6d8be73a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2021-11-22T15:31:14Z",
      "side": 1,
      "message": "For the \u0027branch\u0027 test question, I think put it in another file is better (test_mongo_sync?)",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df9d3ad8_6c0c8a1a",
        "filename": "tests/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2021-11-22T15:31:14Z",
      "side": 1,
      "message": "suggest: maybe check the right backends are installed?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 11,
        "endChar": 14
      },
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c04e4f4b_992e8bf6",
        "filename": "tests/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T11:15:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df9d3ad8_6c0c8a1a",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 11,
        "endChar": 14
      },
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d55ce713_4e2b8bb1",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2021-11-22T15:31:14Z",
      "side": 1,
      "message": "suggest: test_posix_sync.bash",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31d4f3a0_7649e680",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T03:20:47Z",
      "side": 1,
      "message": "hm it tests posix -\u003e mongo so it doesn\u0027t feel right to have only posix in the name? that said it could be more specific; testing mongo-\u003emongo or other usecases could be interesting",
      "parentUuid": "d55ce713_4e2b8bb1",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3abb888_d78d7714",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T10:16:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31d4f3a0_7649e680",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68a3bc19_6089293f",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T03:20:47Z",
      "side": 1,
      "message": "(suggest) make it preserve value if set e.g. rbh_sync\u003d${rbh_sync:-./rbh-sync} or similar, so one can test from another directory than the build dir or test installed binaries somewhere else if desired",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a4c5fac_57209f30",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T10:16:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68a3bc19_6089293f",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc06d92e_7ccecb87",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T03:20:47Z",
      "side": 1,
      "message": "suggested addition: test removed files are removed from db?  test subdirectories? test a large random tree?\nI\u0027m actually surprised Quentin doesn\u0027t have something for this, I remember him testing on a randomly generated tree....",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fa20f3a_a6b5a43f",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T10:16:52Z",
      "side": 1,
      "message": "If you rm a file from the directory and sync it up again, the corresponding entry will still be in the database, so that test cannot work.\nDone for subdirectories and large subtree (which isn\u0027t randomly generated but I think that\u0027s fine ?)",
      "parentUuid": "fc06d92e_7ccecb87",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "235359bc_75309e2e",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T10:31:28Z",
      "side": 1,
      "message": "Oh, rbh-sync doesn\u0027t prune unlinked entries on a full scan?\niirc there should be two mode - partial scan which only adds entry and a full scan that remove entries it hasn\u0027t seen during the scan at the end of the scan... Or am I remembering something from Quentin\u0027s design plans that never were implemented, and one is supposed to drop the database and rescan if they want a rescan? (e.g. fsevents would be the only way of removing files from the db on normal workload)",
      "parentUuid": "8fa20f3a_a6b5a43f",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5228db0_700a5900",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T11:26:25Z",
      "side": 1,
      "message": "I don\u0027t really know, the full scan at least doesn\u0027t remove entries even if they don\u0027t exist in the to-be-synced directory, that\u0027s for certain currently.\nI also find that strange, but it the state of rbh-sync.",
      "parentUuid": "235359bc_75309e2e",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1381409_09a4b5be",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T11:34:18Z",
      "side": 1,
      "message": "(adding Quentin to Cc to get his feedback on this -- please confirm I\u0027m remembering something that just hasn\u0027t been done yet?)",
      "parentUuid": "c5228db0_700a5900",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b17ebe1f_9951306c",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-23T12:50:04Z",
      "side": 1,
      "message": "There\u0027s rbh-gc which seems to do exactly that but is still a work in progress.",
      "parentUuid": "f1381409_09a4b5be",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "035e7d8f_fe579518",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-11-23T20:45:58Z",
      "side": 1,
      "message": "\u003e Oh, rbh-sync doesn\u0027t prune unlinked entries on a full scan?\n\nNo, can confirm it does not.\n\n\u003e iirc there should be two mode\n\nYes, there should... There should.\n\n\u003e - partial scan which only adds entry and a full scan that remove entries it hasn\u0027t seen during the scan at the end of the scan...\n\nWe had conversations about partial vs. full scans, and they might have overlapped with the destructive vs non-destructive issue, but I think the two features can/should exist independently.\n\n\u003e Or am I remembering something from Quentin\u0027s design plans that never were implemented\n\nSadly yes, all this is but a distant dream now. ðŸ˜ž\n\nTo be fair, we did implement partial scans, using backend branches (eg. rbh-sync rbh:posix:/mnt#dir-0 rbh:mongo:scratch). What we are lacking is the ability to detect, as we scan one backend, that there are obsolete links in another backend, which we should then garbage-collect. The idea being that querying each entry of a filesystem is costly enough that you don\u0027t want to do it twice.\n\nThen again, how much of a priority is it to garbage-collect obsolete links if you can scan your whole filesystem in under an hour and only have to do that when your event source (Lustre changelog readers / fanotify) fails you? ðŸ˜‹\n\n-----\n\n\u003e There\u0027s rbh-gc which seems to do exactly that but is still a work in progress.\n\nIt is lacking a README, and a few backlinks from other projects, but it should work. I am not aware of anything remaining to be done for this project to be functional.\n\nIt doesn\u0027t remove \"dead\" links, but that was never its purpose either. It looks for entries which are ripe for garbage collection according to the backend (using the RBH_GO_GC option), checks whether deleting them is safe, and then deletes them.\n\nFeel free to ask more about rbh-gc if you are curious or interested.",
      "parentUuid": "b17ebe1f_9951306c",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f1439f5_e217bafd",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-01-25T09:57:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "035e7d8f_fe579518",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b7ff0e0_02a83692",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T03:20:47Z",
      "side": 1,
      "message": "you run with set -e, so if an error happens this dir will never be cleaned up: suggest trap \"rm -rf \u0027$dir\u0027\" EXIT or similar (quotes in traps are always annoying, it\u0027s not strictly needed here)\n\nI\u0027d also suggest giving your temporary dir a name, so leftovers can be traced back to their sources if they pop up again. mktemp -d -t rbh_sync_test_sync.XXXXX or similar.",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09bf7642_22f28e1a",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T10:16:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b7ff0e0_02a83692",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8512f26f_c25c3a42",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T03:20:47Z",
      "side": 1,
      "message": "is something supposed to cleanup the mongo table after the test ends?",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "554af83b_286f9785",
        "filename": "tests/test_sync.bash",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T10:16:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8512f26f_c25c3a42",
      "revId": "4b0ed9c5ece72b2af9399e3751aeb37dc94ec6ec",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}