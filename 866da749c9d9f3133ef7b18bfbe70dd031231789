{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b638af16_1ca17a0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-09-25T20:03:53Z",
      "side": 1,
      "message": "Hadn\u0027t tested the patch when I pushed it two days ago, there were a couple bugs...\nNow it should be alright.",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b509344_330cead6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-25T21:52:52Z",
      "side": 1,
      "message": "looks good overall, a few remarks.. I still think it\u0027s a pain, but it\u0027s done - thanks!\n(oh, and trusting you on tests :D)",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d15b1268_9fd3e4bd",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-25T21:52:52Z",
      "side": 1,
      "message": "As you\u0027re copying things one for one here, I\u0027d be lazy and just memcpy the whole statx struct then set only mask.\nThis might actually set more fields than requested, but mask is set correctly so \"overset\" fields won\u0027t be accessed, and speed-wise it is definitely going to be faster than checking so many bits (hard to benchmark as you\u0027re filling the branch prediction cache here, so a small benchmark might not show that much of a difference as a larger program.. can\u0027t find the article I had in mind for this)",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61a87adc_7ff37e38",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-09-26T21:38:05Z",
      "side": 1,
      "message": "I am wondering how well-defined the copy of partially initialized fields is...\n\nFor example:\n\n    struct statx source;\n    struct statx dest;\n\n    source-\u003estx_mask \u003d 0;\n    memcpy(dest, source, sizeof(dest)); /* \u003c-- is this valid? */\n\nThe part about filling up the branch prediction cache makes sense to me. If I can get away with a memcpy + \u0026\u003d, I\u0027ll take it.",
      "parentUuid": "d15b1268_9fd3e4bd",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "485b74cc_dafe2eb8",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 400,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-25T21:52:52Z",
      "side": 1,
      "message": "(idle comment) bit of a shame symlink and xattrs are embedded in the struct and we can\u0027t just pass a pointer along as the lifetime of the two fsentries are the same...\n\nsilly question: couldn\u0027t we modify the source fsentry in place? as far as I can see the lifetimes are really the same.",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4008cb11_3879f6a5",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 400,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-09-26T21:38:05Z",
      "side": 1,
      "message": "\u003e couldn\u0027t we modify the source fsentry in place?\n\nWe technically can\u0027t:\n\n    struct rbh_fsentry {\n        (...)\n        const struct statx *statx;\n        (...)\n    };\n\nWhile the field is allocated on the heap with the mongo backend, there is no guarantee it always is the case (though you would be hard pressed to yield dynamically allocated fsentries with references to statically allocated memory, but eh).\n\n\u003e bit of a shame symlink and xattrs are embedded in the struct and we can\u0027t just pass a pointer along as the lifetime of the two fsentries are the same...\n\nYep, struct rbh_fsevent might be a better fit than struct rbh_fsentry for this sort of things. I just wanted to take the simplest approach for now.",
      "parentUuid": "485b74cc_dafe2eb8",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f8940ed_562fa080",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 578,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-25T21:52:52Z",
      "side": 1,
      "message": "note on option name: for a tool called smth-sync, --include/exclude are connoted by e.g. don\u0027t scan this part of the tree for me. (Ã  la rsync)\nIt might be worth making the option more specific?",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19a4a25a_4a37f83e",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 578,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-09-26T21:38:05Z",
      "side": 1,
      "message": "Fair enough, what do you have in mind?\n\nWe could go with `--project [+-]FIELD`. I don\u0027t like the extra parsing it incurs though. Any alternative is welcome.",
      "parentUuid": "9f8940ed_562fa080",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "705b9f1e_82571d4e",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 596,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-25T21:52:52Z",
      "side": 1,
      "message": "(nitpick) not sure it\u0027s clear that you can pass statx for all fields as well as statx.xyz, I only understood that reading code. Not sure how to make it clearer though, the \u0027also suppors\u0027 is correct..",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3e22cdb_52c592bd",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 596,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-09-26T21:38:05Z",
      "side": 1,
      "message": "Bah, worst case scenario, some people end up writing:\n\n  --exclude statx.blksize --exclude statx.attributes --exclude statx.nlink ...\n\nIf they ever open an issue about it, we can ask them how they would rephrase the help message to make it clearer.\n\nAlso, I should update the docs at some point. Could include some examples there to disambiguate. In my backlog.",
      "parentUuid": "705b9f1e_82571d4e",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a9a0572_281bb870",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 675,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-25T21:52:52Z",
      "side": 1,
      "message": "(nitpick) ctime shorthand that\u0027s retrn RBH_STATX_CTIME?",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7152871c_331d303c",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 675,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-09-26T21:38:05Z",
      "side": 1,
      "message": "In my backlog",
      "parentUuid": "6a9a0572_281bb870",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f93b6ec_f12dc859",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 796,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-25T21:52:52Z",
      "side": 1,
      "message": "ns-xattrs, ns-attrs",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b91569d_00f15ccf",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 796,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-09-26T21:38:05Z",
      "side": 1,
      "message": "(done)\n\nAlso realizing that I left code in there to project an xattr\u0027s subfield... Which isn\u0027t actually supported. ðŸ˜•\n\nI\u0027m going to leave it there \"as a bug\". Putting an entry in my backlog to fix this xattr mess. I did not plan on spending so much time on it, just to eventually put it off as an \"exercise for the future\"... It\u0027s really annoying. ðŸ˜•",
      "parentUuid": "7f93b6ec_f12dc859",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d70423e_1aae623c",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 952,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-25T21:52:52Z",
      "side": 1,
      "message": "hm, should the first include passed clear the map?\nkind of would expect rbh-sync --include xyz to only sync xyz.",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6baefa04_464a7528",
        "filename": "rbh-sync.c",
        "patchSetId": 3
      },
      "lineNbr": 952,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-09-26T21:38:05Z",
      "side": 1,
      "message": "If the default was to include (actually) \"everything\", I think I would be up for it.\n\nWould it be OK to add an `--only FIELD` option that _sets_ the mask to `FIELD`? (either this, the `--project` option, having the default be _everything_, or something else if you have suggestions)",
      "parentUuid": "1d70423e_1aae623c",
      "revId": "866da749c9d9f3133ef7b18bfbe70dd031231789",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}