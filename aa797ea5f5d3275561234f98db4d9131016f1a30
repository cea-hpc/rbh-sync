{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c6365a53_02ae8e3f",
        "filename": "tests/test_mongo_mongo_sync.bash",
        "patchSetId": 9
      },
      "lineNbr": 3,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T19:51:21Z",
      "side": 1,
      "message": "(typo) rbh-sync",
      "range": {
        "startLine": 3,
        "startChar": 23,
        "endLine": 3,
        "endChar": 44
      },
      "revId": "aa797ea5f5d3275561234f98db4d9131016f1a30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbff5434_6418fc30",
        "filename": "tests/test_mongo_mongo_sync.bash",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T19:51:21Z",
      "side": 1,
      "message": "(major) This is a bad name for a function. I have no idea what this does from looking at how it is used.",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 9
      },
      "revId": "aa797ea5f5d3275561234f98db4d9131016f1a30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d40cb99_a2f1639a",
        "filename": "tests/test_mongo_mongo_sync.bash",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T19:51:21Z",
      "side": 1,
      "message": "(major) I am pretty sure you can compare the content of the databases using mongo commands. Will make for a clearer and more robust test.",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 102,
        "endChar": 6
      },
      "revId": "aa797ea5f5d3275561234f98db4d9131016f1a30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1796b045_3443322a",
        "filename": "tests/test_posix_mongo_sync.bash",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T19:51:21Z",
      "side": 1,
      "message": "(major) Same remark as for the other test file: why not use a mongo shell command directly to make sure the xattr you are expecting is actually there.",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 86,
        "endChar": 61
      },
      "revId": "aa797ea5f5d3275561234f98db4d9131016f1a30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5723f66_4a17d84f",
        "filename": "tests/test_posix_mongo_sync.bash",
        "patchSetId": 9
      },
      "lineNbr": 134,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T19:51:21Z",
      "side": 1,
      "message": "(major) Using other tests as a setup is a big no-no. Adding a new unrelated test could break this one, and then it\u0027s a headache for the person in charge of fixing it (very simple example: another test creates a file/directory which is not readable \u003d\u003e game over).\n\nNo, if you want a \"large tree\", you can create it.",
      "range": {
        "startLine": 134,
        "startChar": 5,
        "endLine": 134,
        "endChar": 27
      },
      "revId": "aa797ea5f5d3275561234f98db4d9131016f1a30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b484793_91b40550",
        "filename": "tests/test_posix_mongo_sync.bash",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T19:51:21Z",
      "side": 1,
      "message": "(minor) Either of these three options would be better IMO\n\n- find .. -printf \u0027%P\\n\u0027\n- find .. | sed \u0027s/^..//\u0027\n- (cd ..; find;)",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 140,
        "endChar": 72
      },
      "revId": "aa797ea5f5d3275561234f98db4d9131016f1a30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}